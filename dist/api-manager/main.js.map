{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api-list/api-list.component.html","webpack:///./src/app/api-list/api-list.component.scss","webpack:///./src/app/api-list/api-list.component.ts","webpack:///./src/app/api-proxy.service.ts","webpack:///./src/app/api-test.service.ts","webpack:///./src/app/api/api.component.html","webpack:///./src/app/api/api.component.scss","webpack:///./src/app/api/api.component.ts","webpack:///./src/app/apitransport.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/main-nav/main-nav.component.html","webpack:///./src/app/main-nav/main-nav.component.scss","webpack:///./src/app/main-nav/main-nav.component.ts","webpack:///./src/app/test-dialog/test-dialog.component.html","webpack:///./src/app/test-dialog/test-dialog.component.scss","webpack:///./src/app/test-dialog/test-dialog.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div fxLayout=\\\"row wrap\\\">\\n  <div *ngFor=\\\"let API of APIs\\\" [hidden]=\\\"API.hide\\\"  fxFlex=\\\"100%\\\">\\n    <mat-list>\\n    <api-card [API]=\\\"API\\\"></api-card>\\n    <mat-divider></mat-divider>\\n    </mat-list>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwaS1saXN0L2FwaS1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable, Subject, asapScheduler, pipe, of, from, interval, merge, fromEvent } from 'rxjs';\n\nimport {APIProxyService, APIProxy} from '../api-proxy.service';\nimport { TestDialogComponent, TestDialogData } from '../test-dialog/test-dialog.component';\nimport {MatDialog} from '@angular/material';\n\n@Component({\n  selector: 'app-api-list',\n  templateUrl: './api-list.component.html',\n  styleUrls: ['./api-list.component.scss']\n})\nexport class ApiListComponent {\n  @Input() search: string;\n  @Input() tenant: string;\n  APIs: APIProxy[];\n  APIs$: Observable<APIProxy[]>;\n  constructor(apiProxyService: APIProxyService,\n              public dialog: MatDialog) {\n    this.APIs = [];\n    this.APIs$ = apiProxyService.getAPIProxies();\n    this.APIs$.subscribe(res => this.APIs = res);\n  }\n\n  ngOnChanges(changes){\n    if(changes[\"search\"] || changes[\"tenant\"]){\n      for(let i = 0; i < this.APIs.length; ++i) {\n        this.APIs[i].hide=false;\n        if (\n          !this.APIs[i].apiName.toUpperCase().includes(this.search) &&\n            !this.APIs[i].apiURL.toUpperCase().includes(this.search) &&\n            !this.APIs[i].apiTargetDestination.toUpperCase().includes(this.search) &&\n            !this.APIs[i].apiTargetEndpoint.toUpperCase().includes(this.search) || (this.tenant && this.tenant !== this.APIs[i].maxTenant())\n        ) {\n          this.APIs[i].hide=true;\n        }\n      }\n    }\n  }\n}\n","import { Injectable, Output, EventEmitter, Component } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { Observable, forkJoin } from 'rxjs';\n\nexport class APIProxy {\n  apiName: string;\n  apiURL: string;\n  apiTargetDestination: string;\n  apiTargetEndpoint: string;\n  inProduction: boolean;\n  prodColor: string = \"secondary\";\n  inQA: boolean;\n  qaColor: string = \"secondary\"\n  testedInQA: boolean;\n  inDev: boolean = true;\n  testedInDev: boolean;\n  devColor: string = \"primary\";\n  working: boolean = false;\n  style: string = \"display: none;\";\n  hide: boolean = false;\n\n  constructor(name: string, url:string,\n              destination:string, endpoint: string,\n              inQA: boolean, inProduction: boolean){\n\n    this.apiName = name;\n    this.apiURL = url;\n    this.apiTargetDestination = destination;\n    this.apiTargetEndpoint = endpoint;\n    this.inQA = inQA;\n    this.qaColor = this.inQA ? 'primary' : 'secondary';\n    this.testedInDev = this.inQA ? true : false;\n    this.inProduction = inProduction;\n    this.prodColor = this.inProduction ? 'primary' : 'secondary';\n    this.testedInQA = this.inProduction ? true : false;\n    console.log(this.testedInDev);\n  }\n\n  toggleHide() {\n    this.hide = !this.hide;\n  }\n\n  moveToProduction() {\n    if (!this.inProduction) {\n      if (this.working) {\n        return;\n      }\n      this.working = true;\n\n      setTimeout(() => {\n        this.inProduction = true;\n        this.prodColor = \"primary\";\n        this.working = false;\n      }, 2000);\n    }\n  }\n\n  maxTenant(): string {\n    if (this.inProduction) {\n      return \"Production\";\n    }\n    if (this.inQA) {\n      return \"QA\";\n    }\n    return \"Development\";\n  }\n\n  setQA() {\n    this.inQA = true;\n    this.qaColor = \"primary\";\n    this.testedInDev = true;\n  }\n\n  setProduction() {\n    this.inProduction = true;\n    this.prodColor = \"primary\";\n    this.testedInQA = true;\n  }\n\n  moveToQA() {\n    if (!this.inQA) {\n      if (this.working) {\n        return;\n      }\n      this.working = true;\n\n      setTimeout(() => {\n        this.working = false;\n        this.qaColor = \"primary\"\n        this.inQA = true;\n      }, 2000);\n\n    }\n  }\n\n  setStyles() {\n    let styles = {\n      'display': this.working ? 'inline' : 'none',\n      'text-align': 'center'\n    };\n    return styles;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class APIProxyService {\n  APIM_HOST_MAP = {\n    'dev': 'dfc3ccb1f',\n    'qa': 'd8b3bfb89',\n    'sandbox': 'd6c83d68e',\n  }\n\n  API_MAP = {};\n\n  APIM_DEV_HOST: string = \"https://produs2apiportalapimgmtpphx-dfc3ccb1f.us2.hana.ondemand.com/apiportal/api/1.0/\";\n  APIM_PROXY_PATH: string = \"Management.svc/APIProxyEndPoints\";\n  APIM_TARGET_PATH: string = \"Management.svc/APITargetEndPoints\";\n\n  constructor(private http: HttpClient) { }\n\n  public getAPIProxies(): Observable<APIProxy[]>{\n\n    let APIEndpoints = this.http.get('/api/devapi/' + this.APIM_PROXY_PATH);\n    let APITargets = this.http.get('/api/devapi/' + this.APIM_TARGET_PATH);\n    let APIEndpointsQA = this.http.get('/api/qaapi/' + this.APIM_PROXY_PATH);\n    let APIEndpointsProduction = this.http.get('/api/prodapi/' + this.APIM_PROXY_PATH);\n\n    return forkJoin([APIEndpoints, APITargets, APIEndpointsQA, APIEndpointsProduction]).pipe(\n    //return forkJoin([APIEndpoints, APITargets, APIEndpointsQA]).pipe(\n      map(results => {\n        var result: APIProxy[] = [];\n        let resp1 = results[0]['d']['results'];\n        let resp2 = results[1]['d']['results'];\n        let resp3 = results[2]['d']['results'];\n        let resp4 = results[3]['d']['results'];\n\n        let resultMap = {};\n\n        for (let i in resp1) {\n          resultMap[resp1[i]['FK_API_NAME']] =\n            new APIProxy(\n              resp1[i]['FK_API_NAME'],\n              resp1[i]['base_path'],\n              \"\",\n              \"\",\n              false,\n              false);\n\n        }\n\n        for (let api of resp2) {\n          if (resultMap[api['FK_API_NAME']]) {\n            resultMap[api['FK_API_NAME']].apiTargetDestination =\n              (api['provider_id'] == 'NONE' ? 'URL' : api['provider_id']);\n            resultMap[api['FK_API_NAME']].apiTargetEndpoint =\n              (api['relativePath'] == null ? api['url'] : api['relativePath']);\n          }\n        }\n\n        for (let api of results[2]['d']['results']) {\n          if (resultMap[api['FK_API_NAME']]) {\n            resultMap[api['FK_API_NAME']].setQA();\n          }\n        }\n\n        for (let api of results[3]['d']['results']) {\n          if (resultMap[api['FK_API_NAME']]) {\n            resultMap[api['FK_API_NAME']].setProduction();\n          }\n        }\n\n        return Object.values(resultMap);\n      })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { APIProxy } from './api-proxy.service';\nimport { HttpClient } from '@angular/common/http';\nimport {MatSnackBar} from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiTestService {\n\n  constructor(private http: HttpClient,\n              private snackBar: MatSnackBar) { }\n\n  async Test(API: APIProxy, tenant: string, token: string, metaDataPath: string) {\n    let payload = {}\n    payload['Token'] = token\n    payload['Path'] = metaDataPath\n\n    let response = await this.http.post(`/api/test/${tenant}/${API.apiName}`, JSON.stringify(payload)).toPromise()\n      .then(data => {\n        return data;\n      })\n      .catch(error => {\n        this.snackBar.open(\"Error! test failed with status code \" + error.error, null,{\n          duration: 3000,\n          panelClass: [\"failed-snackbar\"]\n        });\n        return null;\n      });\n    return response\n  }\n}\n","module.exports = \"<mat-list-item>\\n  <h1 style=\\\"font-weight: bold;\\\"matLine>{{this.API.apiName}}</h1>\\n  <h4 matLine class=\\\"demo-2\\\">URL: {{this.API.apiURL}} </h4>\\n  <h4 matLine> Target: {{this.API.apiTargetDestination}}: {{this.API.apiTargetEndpoint}}</h4>\\n  <div style=\\\"padding-top: 1rem; padding-bottom: 0.25rem\\\"matLine>\\n    <button [color]=\\\"this.API.devColor\\\"\\n            (click)=\\\"openDialog(this.API, 'DEV', !this.API.inDev)\\\"\\n            style=\\\"display: inline; margin-right: 1rem;\\\"\\n            mat-raised-button>\\n      {{this.API.inDev ? \\\"Test in Development\\\" : \\\"Move to Development\\\"}}\\n    </button>\\n\\n    <button (click)=\\\"openDialog(this.API, 'QA', !this.API.inQA)\\\"\\n            [color]=\\\"this.API.qaColor\\\"\\n            style=\\\"display: inline; margin-right: 1rem;\\\"\\n            mat-raised-button>\\n      {{this.API.inQA ? \\\"Test in QA\\\" : \\\"Move to QA\\\"}}\\n    </button>\\n\\n    <button\\n      (click)=\\\"this.API.inProduction ? null : openDialog(this.API, 'PROD', !this.API.inProd)\\\"\\n      [color]=\\\"this.API.prodColor\\\"\\n      [disabled]=\\\"!this.API.inQA\\\"\\n      [disableRipple]=\\\"this.API.inProduction\\\"\\n      style=\\\"display: inline; margin-right: 1rem;\\\"\\n      mat-raised-button>\\n\\n      {{this.API.inProduction ? \\\"In Production\\\" : \\\"Move to Production\\\"}}\\n    </button>\\n    <mat-spinner\\n      color=\\\"accent\\\"\\n      [ngStyle]=\\\"this.API.setStyles()\\\"\\n      [diameter]=\\\"28\\\"></mat-spinner>\\n  </div>\\n</mat-list-item>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwaS9hcGkuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input} from '@angular/core';\nimport { Observable, Subject, asapScheduler, pipe, of, from, interval, merge, fromEvent } from 'rxjs';\n\nimport { APIProxy} from '../api-proxy.service';\nimport { TestDialogComponent, TestDialogData } from '../test-dialog/test-dialog.component';\nimport {MatDialog} from '@angular/material';\n\n@Component({\n  selector: 'api-card',\n  templateUrl: './api.component.html',\n  styleUrls: ['./api.component.scss']\n})\nexport class APIComponent {\n  @Input() API: APIProxy;\n  constructor(public dialog: MatDialog) {\n  }\n\n  openDialog(API: APIProxy, environment: string, transport: boolean): void {\n    const dialogRef = this.dialog.open(TestDialogComponent, {\n      width: '500px',\n      data: {api: API, environment: environment, success: false, transport: transport}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n\n      if (result) {\n        console.log(environment);\n        if (environment === \"QA\") {\n          this.API.testedInQA = true;\n          this.API.inQA = true;\n          this.API.qaColor = \"primary\"\n        } else if (environment === \"PROD\" ){\n          this.API.inProduction = true;\n          this.API.prodColor = \"primary\"\n        }\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { APIProxy } from './api-proxy.service';\nimport { HttpClient } from '@angular/common/http';\nimport {MatSnackBar} from '@angular/material';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiTransportService {\n  constructor(private http: HttpClient,\n              private snackBar: MatSnackBar) { }\n\n  async Transport(API: APIProxy, tenant: string, token: string, metaDataPath: string,\n                  email: string, password: string) {\n    let payload = {};\n    payload['Token'] = token;\n    payload['Path'] = metaDataPath;\n    payload['Email'] = email;\n    payload['Password'] = password;\n    tenant = tenant === \"PROD\" ? \"QA\" : \"DEV\";\n\n    let response = await this.http.post(`/api/transport/${tenant}/${API.apiName}`, JSON.stringify(payload)).toPromise()\n      .then(data => {\n        return data;\n      })\n      .catch(error => {\n        this.snackBar.open(\"Error! Transport failed with status code \" + error.error, null,{\n          duration: 3000,\n          panelClass: [\"failed-snackbar\"]\n        });\n        return null;\n      });\n    return response\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-main-nav></app-main-nav>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'api-manager';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MainNavComponent } from './main-nav/main-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatCardModule, MatProgressSpinnerModule, MatFormFieldModule, MatInputModule, MatDialogModule, MatSelectModule} from '@angular/material';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatSnackBarModule } from \"@angular/material\";\n\n\nimport { APIComponent } from './api/api.component';\nimport { APIProxyService } from './api-proxy.service';\nimport { ApiTestService } from './api-test.service';\nimport { HttpClientModule,  HttpClientXsrfModule } from '@angular/common/http';\nimport { TestDialogComponent } from './test-dialog/test-dialog.component';\nimport { ApiListComponent } from './api-list/api-list.component';\nimport { ApiTransportService } from './apitransport.service'\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainNavComponent,\n    APIComponent,\n    TestDialogComponent,\n    ApiListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatDialogModule,\n    MatSelectModule,\n    FormsModule,\n    MatSnackBarModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'BIGipServerprodus2apiportalapimgmtpphx.us2.hana.ondemand.com\t',\n    }),\n  ],\n  providers: [APIProxyService, ApiTestService, ApiTransportService],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    TestDialogComponent\n  ],\n})\nexport class AppModule { }\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\" >\\n  <!--\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\"\\n      [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n      [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n      [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar>Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item href=\\\"#\\\">Link 1</a>\\n      <a mat-list-item href=\\\"#\\\">Link 2</a>\\n      <a mat-list-item href=\\\"#\\\">Link 3</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n-->\\n  <mat-sidenav-content>\\n\\n    <mat-toolbar style=\\\"position: sticky; top: 0; z-index: 1; height: 100px;\\\"class=\\\"mat-elevation-z5\\\" color=\\\"primary\\\">\\n\\n      <!--\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button> -->\\n      <img class=\\\"img-fluid\\\" style=\\\"width: auto; height: 100%;\\\" src=\\\"assets/img/Nike-Swoosh.svg\\\">\\n      <span>SAPAE APIs</span>\\n      <div fxFlex=\\\"40\\\">\\n      </div>\\n      <div fxFlex>\\n        <mat-form-field style=\\\"margin-right: 1rem;\\\">\\n          <input  matInput placeholder=\\\"Search\\\" [formControl]=\\\"search\\\">\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-select [(value)]=\\\"tenant\\\" placeholder=\\\"Tenant\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option value=\\\"Development\\\">Development</mat-option>\\n            <mat-option value=\\\"QA\\\">QA</mat-option>\\n            <mat-option value=\\\"Production\\\">Production</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n\\n    </mat-toolbar>\\n\\n    <app-api-list [search]=\\\"search.value.toUpperCase()\\\"\\n                  [tenant]=\\\"tenant\\\"></app-api-list>\\n\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","module.exports = \".sidenav-container {\\n  height: 100%; }\\n\\n.sidenav {\\n  width: 200px; }\\n\\n.sidenav .mat-toolbar {\\n  background: inherit; }\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90YW5kcjkvRG9jdW1lbnRzL3RtcC9hbmd1bGFyL2FwaS1tYW5hZ2VyL3NyYy9hcHAvbWFpbi1uYXYvbWFpbi1uYXYuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZLEVBQUE7O0FBR2Q7RUFDRSxZQUFZLEVBQUE7O0FBR2Q7RUFDRSxtQkFBbUIsRUFBQTs7QUFHckI7RUFDRSx3QkFBZ0I7RUFBaEIsZ0JBQWdCO0VBQ2hCLE1BQU07RUFDTixVQUFVLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tYWluLW5hdi9tYWluLW5hdi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWRlbmF2LWNvbnRhaW5lciB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnNpZGVuYXYge1xuICB3aWR0aDogMjAwcHg7XG59XG5cbi5zaWRlbmF2IC5tYXQtdG9vbGJhciB7XG4gIGJhY2tncm91bmQ6IGluaGVyaXQ7XG59XG5cbi5tYXQtdG9vbGJhci5tYXQtcHJpbWFyeSB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbiAgei1pbmRleDogMTtcbn1cbiJdfQ== */\"","import { Component, EventEmitter, Output } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.scss']\n})\nexport class MainNavComponent {\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  search: FormControl;\n  @Output() valueChange = new EventEmitter();\n  tenant: string;\n  constructor(private breakpointObserver: BreakpointObserver) {\n    this.search = new FormControl('');\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row wrap\\\" >\\n  <div fxFlex=\\\"100\\\" style=\\\"text-align: center;\\\">\\n    <h3 *ngIf=\\\"this.data.transport; else elseBlock\\\">Transporting {{data.api.apiName}} to {{this.data.environment}}</h3>\\n    <ng-template #elseBlock> Testing {{data.api.apiName}} in {{this.data.environment}}</ng-template>\\n  </div>\\n\\n  <div fxFlex=\\\"70%\\\" style=\\\"text-align: left;\\\">\\n    <ng-container *ngFor=\\\"let test of tests\\\">\\n      <h4>{{test.name}}</h4>\\n    </ng-container>\\n  </div>\\n\\n  <div fxFlex style=\\\"text-align: left;\\\">\\n    <ng-container *ngFor=\\\"let test of tests;\\\">\\n      <h4>\\n        <mat-icon *ngIf=\\\"test.success !== null && !this.working && !test.success\\\"\\n                  color=\\\"warn\\\"\\n                  [inline]=\\\"true\\\"\\n                  mat-list-icon>clear</mat-icon>\\n        <mat-icon *ngIf=\\\"test.success !== null && !this.working && test.success\\\"\\n                  style=\\\"color: green;\\\"\\n                  [inline]=\\\"true\\\"\\n                  mat-list-icon>done</mat-icon>\\n      </h4>\\n    </ng-container>\\n  </div>\\n\\n  <div fxFlex=\\\"100\\\">\\n    <ng-container *ngIf=\\\"this.data.transport\\\">\\n      <mat-form-field style=\\\"width: 60%;\\\">\\n        <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" [formControl]=\\\"email\\\">\\n      </mat-form-field>\\n      <mat-form-field style=\\\"width: 60%;\\\">\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" [formControl]=\\\"password\\\">\\n      </mat-form-field>\\n    </ng-container>\\n    <mat-form-field>\\n      <input matInput [formControl]=\\\"metaDataPath\\\" placeholder=\\\"Path to Metadata\\\">\\n      <span matPrefix>{{data.api.apiURL}}</span>\\n    </mat-form-field>\\n    <mat-form-field style=\\\"width: 60%; margin-right: 1rem;\\\">\\n      <textarea matInput [formControl]=\\\"token\\\" placeholder=\\\"Input your bearer token\\\"></textarea>\\n    </mat-form-field>\\n\\n    <button\\n      color=\\\"primary\\\"\\n      [disabled]=\\\"!this.token.valid\\\"\\n      (click)=\\\"testService()\\\"\\n      mat-raised-button>\\n      <ng-container *ngIf=\\\"this.data.transport; else buttonElseBlock\\\">Transport</ng-container>\\n      <ng-template #buttonElseBlock>Run Tests</ng-template>\\n    </button>\\n    <mat-spinner\\n          *ngIf=\\\"this.working\\\"\\n          color=\\\"accent\\\"\\n          style=\\\"display: inline; margin-left: 1rem;\\\"\\n          [diameter]=\\\"30\\\">\\n    </mat-spinner>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QtZGlhbG9nL3Rlc3QtZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport {APIProxy} from '../api-proxy.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport {ApiTestService} from '../api-test.service';\nimport {ApiTransportService} from '../apitransport.service';\nimport {MatSnackBar} from '@angular/material';\n\n\nexport interface TestDialogData {\n  api: APIProxy;\n  environment: string,\n  success: boolean;\n  transport: boolean;\n}\n\nclass Test {\n  name: string;\n  success: boolean;\n  constructor(name: string) {\n    this.name = name;\n    this.success = null;\n  }\n};\n\n@Component({\n  selector: 'app-test-dialog',\n  templateUrl: './test-dialog.component.html',\n  styleUrls: ['./test-dialog.component.scss']\n})\nexport class TestDialogComponent {\n  token: FormControl;\n  metaDataPath: FormControl;\n  email: FormControl;\n  password: FormControl;\n  apiTestService: ApiTestService\n  apiTransportService: ApiTransportService\n  environment: string;\n  working: boolean;\n  tests: Test[] = [\n    new Test(\"Client ID Authorized\"),\n    new Test(\"Rejects Incorrect Token\"),\n    new Test(\"Successfully Called\")\n  ];\n\n  constructor(\n    public dialogRef: MatDialogRef<TestDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: TestDialogData,\n    apiTestService: ApiTestService,\n    apiTransportService: ApiTransportService,\n    private snackBar: MatSnackBar) {\n    this.apiTestService = apiTestService;\n    this.apiTransportService = apiTransportService;\n\n    this.token = new FormControl('', [Validators.required]);\n    this.metaDataPath = new FormControl('/$metadata', [Validators.required]);\n    this.email = new FormControl('example@nike.com', [Validators.required]);\n    this.password = new FormControl('', [Validators.required]);\n\n    if (this.data.transport) {\n      this.tests.push(new Test(\"Client ID Authorized in Target Tenant\"));\n      this.tests.push(new Test(\"Authorized to Transport\"));\n    }\n    this.working = false;\n  }\n\n  async testService() {\n    if(this.token.invalid) {\n      return\n    }\n\n    this.working = true;\n    let result = []\n    if (!this.data.transport) {\n      result = await this.apiTestService.Test(this.data.api, this.data.environment,\n                                              this.token.value, this.metaDataPath.value);\n    } else {\n      result = await this.apiTransportService.Transport(this.data.api, this.data.environment,\n                                                        this.token.value, this.metaDataPath.value,\n                                                        this.email.value, this.password.value);\n    }\n    this.working = false;\n    if (result === null) {\n      return\n    }\n    let transport = false;\n    for (let test of result) {\n      if (test['Name'] === 'kvm authorization test') {\n        this.tests[0].success = test['Pass']\n      }\n      if (test['Name'] === 'unauthorized client test') {\n        this.tests[1].success = test['Pass']\n      }\n      if (test['Name'] === 'api authentication test') {\n        this.tests[2].success = test['Pass']\n      }\n      if (test['Name'] === 'authorized in target tenant' && this.tests.length > 3) {\n        this.tests[3].success = test['Pass']\n      }\n      if (test['Name'] === 'transport' && test['Pass'] === true) {\n        transport = true\n      }\n      if (test['Name'] === 'ldap authentication test' && this.tests.length > 4) {\n        this.tests[4].success = test['Pass']\n      }\n    }\n\n    if (transport && this.tests.length >= 4 && this.tests[0].success && this.tests[1].success && this.tests[2].success && this.tests[3].success) {\n      this.snackBar.open(\"Transport Succeeded!\", null,{\n        duration: 3000,\n        panelClass: [\"succeed-snackbar\"]\n      });\n      this.dialogRef.close(true);\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}